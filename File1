import tkinter as tk
from fpdf import FPDF

# Function to calculate the tip based on the total amount and tip percentage
def calculate_tip(total_amount, tip_percentage):
    return total_amount * (tip_percentage / 100)

# Function to split the bill among multiple people
def split_bill(total_amount, num_people):
    return total_amount / num_people

# Function to generate and save the receipt as a PDF file
def save_receipt_pdf(total_amount, tip_percentage, tip_amount, total_with_tip, num_people, per_person_amount):
    pdf = FPDF()
    pdf.add_page()
    
    pdf.set_font("Arial", size=12)
    pdf.cell(200, 10, txt="Receipt", ln=True, align='C')
    
    pdf.cell(200, 10, txt=f"Total Amount: ${total_amount:.2f}", ln=True)
    pdf.cell(200, 10, txt=f"Tip Percentage: {tip_percentage}%", ln=True)
    pdf.cell(200, 10, txt=f"Tip Amount: ${tip_amount:.2f}", ln=True)
    pdf.cell(200, 10, txt=f"Total with Tip: ${total_with_tip:.2f}", ln=True)
    
    if num_people > 1:
        pdf.cell(200, 10, txt=f"Number of People: {num_people}", ln=True)
        pdf.cell(200, 10, txt=f"Amount per Person: ${per_person_amount:.2f}", ln=True)
    
    pdf.output("receipt.pdf")
    print("Receipt saved as receipt.pdf")

# Function to handle the calculation and display the results
def calculate_tip_and_save():
    try:
        # Get input values from the user
        total_amount = float(entry_total.get())
        tip_percentage = float(entry_tip.get())
        num_people = int(entry_people.get())

        # Calculate the tip and total amount
        tip_amount = calculate_tip(total_amount, tip_percentage)
        total_with_tip = total_amount + tip_amount

        if num_people > 1:
            per_person = split_bill(total_with_tip, num_people)
        else:
            per_person = total_with_tip

        # Display the result in the GUI
        result_text = f"Tip Amount: ${tip_amount:.2f}\nTotal with Tip: ${total_with_tip:.2f}"
        if num_people > 1:
            result_text += f"\nPer Person: ${per_person:.2f}"

        result_label.config(text=result_text)

        # Save the receipt as a PDF
        save_receipt_pdf(total_amount, tip_percentage, tip_amount, total_with_tip, num_people, per_person)

    except ValueError:
        result_label.config(text="Please enter valid numbers.")

# Create the main window for the GUI
root = tk.Tk()
root.title("Enhanced Tip Calculator with PDF Receipt")

# Create and place the widgets for user input
tk.Label(root, text="Total Amount ($):").grid(row=0, column=0, padx=10, pady=5)
entry_total = tk.Entry(root)
entry_total.grid(row=0, column=1, padx=10, pady=5)

tk.Label(root, text="Tip Percentage (%):").grid(row=1, column=0, padx=10, pady=5)
entry_tip = tk.Entry(root)
entry_tip.grid(row=1, column=1, padx=10, pady=5)

tk.Label(root, text="Number of People:").grid(row=2, column=0, padx=10, pady=5)
entry_people = tk.Entry(root)
entry_people.grid(row=2, column=1, padx=10, pady=5)

tk.Button(root, text="Calculate and Save Receipt", command=calculate_tip_and_save).grid(row=3, column=0, columnspan=2, pady=10)

# Label to display the results
result_label = tk.Label(root, text="", font=("Arial", 14))
result_label.grid(row=4, column=0, columnspan=2, pady=10)

# Run the application
root.mainloop()
